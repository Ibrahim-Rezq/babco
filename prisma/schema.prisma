generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String     @id @default(cuid())
  name          String?    @default(cuid())
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          Role       @default(CUSTOMER)
  cartItems     CartItem[]
  orders        Order[]
}

enum Role {
  CUSTOMER
  ADMIN
}

model Section {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  products Product[]
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String?
  price       Int // in cents
  section     Section     @relation(fields: [sectionId], references: [id])
  sectionId   String
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model CartItem {
  id        String  @id @default(cuid())
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String
}

model Order {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now())
  total     Int // in cents
  items     OrderItem[]
  user      User        @relation(fields: [userId], references: [id])
  userId    String
}

model OrderItem {
  id        String  @id @default(cuid())
  quantity  Int
  price     Int // in cents
  product   Product @relation(fields: [productId], references: [id])
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
}
